#include <vector>
#include <deque>
#include <list>
#include <forward_list>
#include <array>
#include <string>
using namespace std;
// [note]: 顺序容器的类型
//         1. vector -- 可变大小的数组, 在尾部之外的位置删除和插入会很慢
//         2. deque  -- 双端队列(广度优先搜索中使用最多的数据结构)
//         3. list   -- 双向链表
//         4. forward_list -- 单向链表
//         5. array  -- 固定大小的数组, 不可以添加删除元素, 对标内置数组类型
//         6. string -- 与vector类似, 存储字符的数据结构, 尾部增删很快
//
//
// [note]: 所有容器的通用操作
//         1. 类型别名
//         -----------------------------------------------------------------
//         -  iterator                 -  容器迭代器                       -
//         -  const_iterator           -  const类型的迭代器                -
//         -  size_type                -  无符号的整数类型                 -
//         -  difference_type          -  带符号的整数类型                 -
//         -  value_type               -  元素类型                         -
//         -  reference                -  左值引用, value_type&            -
//         -  const_reference          -  const value_type&                -
//         -----------------------------------------------------------------
//         
//         2. 构造函数
//         -----------------------------------------------------------------
//         -  C c;                     -  默认构造函数                     -
//         -  C c(cpy_obj);            -  拷贝构造函数                     -
//         -  C c(b, e);               -  将迭代器b到e的范围拷贝到c        -
//         -  C c{a, b, c};            -  列表初始化                       -
//         -----------------------------------------------------------------
//
//         3. 赋值与swap
//         -----------------------------------------------------------------
//         -  c1 = c2;                 -  赋值                             -
//         -  c1 = {a, b, c};          -  列表赋值                         -
//         -  a.swap(b) or swap(a, b)  -  交换                             -
//         -----------------------------------------------------------------
//
//         4. 大小
//         -----------------------------------------------------------------
//         -  c.size();                -  保存元素数目                     -
//         -  c.max_size();            -  可以保存的最大元素数目           -
//         -  c.empty();               -  是否为空                         -
//         -----------------------------------------------------------------
//
//         5. 迭代器
//         -----------------------------------------------------------------
//         -  c.begin(), c.end()       -  返回iterator                     -
//         -  c.cbegin(), c.cend()     -  返回const_iterator               -
//         -  c.rbegin(), c.rend()     -  返回reverse_iterator             -
//         -  c.crbegin(), c.crend()   -  返回const_reverse_iterator       -
//         -----------------------------------------------------------------
int main()
{

}